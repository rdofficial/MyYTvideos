#!/bin/python3
# The script to crack passwords using python

# Importing the required modules
import hashlib as hash
from os import path

# Defining the required functions

def main():
	""" The main function of the script """

	# Asking the user for required inputs
	hashedPassword = input('Enter the password hash : ')
	wordlist = input('Enter the location for the wordlist file : ')

	if path.isfile(wordlist) == False:
		# If the user specified wordlist file does not exists

		print('[ No such file found : {} ]'.format(wordlist))

	# Extracting the passwords to be tried
	passwords = []
	wordlist = open(wordlist, 'r')
	for i in wordlist:
		text = ''
		for char in i:
			if char == '\n':
				break
			else:
				text += char
		passwords.append(text)

	# Hashing each passwords in the list objects to all the hashing algorithms to atleast match one
	for password in passwords:
		md5 = hash.md5(password.encode()).hexdigest()
		sha1 = hash.sha1(password.encode()).hexdigest()
		sha224 = hash.sha224(password.encode()).hexdigest()
		sha256 = hash.sha256(password.encode()).hexdigest()
		sha384 = hash.sha384(password.encode()).hexdigest()
		sha512 = hash.sha512(password.encode()).hexdigest()

		# Checking wheter any hashing algorithms crack the password or not
		if hashedPassword == md5 or hashedPassword == sha1 or hashedPassword == sha256 or hashedPassword == sha384 or hashedPassword == sha512:
			# If any of the hashing algorithms cracks the passwords, then we break the loop to print it

			print()
			print('Password found : {}'.format(password))
			quit()
		else:
			print('Trying password : {}'.format(password))

	# If the loop completes and the password is still not cracked then we return an failure error message
	print('Password is not present in the specified wordlist file')

if __name__ == '__main__':
	try:
		main()
	except KeyboardInterrupt:
		quit()
